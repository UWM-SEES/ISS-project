function [DDCU] = Calculate_DDCU_Mass(F, Vin, Vout, Pout, Available_Modules, Required_Modules, FS_efficiency, FS_ripple, RS_efficiency, ITS_efficiency, CS_efficiency, CC_Efficiency, harnessMaterial, enclosureType, enclosureMaterial, radiatorType, maxBaseplateTemp, maxRadiatorSinkTemp, maxRadiatorBaseplateDelta, radiatorMaterial)
    % we probably want THIS to be in total_Mass, along with DC RBI
    % switchgear, and call smaller Calculate functions w/in here

    Filter_Stage_Mass_Input = Calculate_Filter_Stage_Mass(F, Vin, Pout, Available_Modules, Required_Modules, FS_efficiency, FS_ripple);
    Filter_Stage_Mass_Output = Calculate_Filter_Stage_Mass(F, Vout, Pout, Available_Modules, Required_Modules, FS_efficiency, FS_ripple);
    Rectifier_Stage_Mass = Calculate_Rectifier_Stage_Mass(F, Vin, Vout, Pout, Available_Modules, Required_Modules, RS_efficiency);
    Inverter_Transformer_Stage_Mass = Calculate_Inverter_Transformer_Stage_Mass(F, Vin, Vout, Pout, Available_Modules, Required_Modules, ITS_efficiency);
    Chopper_Stage_Mass = Calculate_Chopper_Stage_Mass(F, Vin, Vout, Pout, Available_Modules, Required_Modules, CS_efficiency);

    packaged_electronics_density = 0.222; % this is for FH, for CP it is 0.249
%     switch(enclosureType)
%         case 'CP'
%             packaged_electronics_density = 0.249;
%         case 'FH'
%             packaged_electronics_density = 0.222; 

    Component_Electronics_Mass = Filter_Stage_Mass_Input + Filter_Stage_Mass_Output + Rectifier_Stage_Mass + Inverter_Transformer_Stage_Mass + Chopper_Stage_Mass;
    Component_Volume = Component_Electronics_Mass/(1000*packaged_electronics_density);
   
    switch(enclosureType)
        case 'CP'
            CC_Length = 1.610*Component_Volume^0.3333;
            CC_Width = 1.043*Component_Volume^0.3333;
            CC_Height = 0.596*Component_Volume^0.3333;
        case 'FH'
            CC_Length = 1.351*Component_Volume^0.3333;
            CC_Width = 1.148*Component_Volume^0.3333;
            CC_Height = 0.646*Component_Volume^0.3333;   
    end
    
    
    box_Mass = Calculate_Box_Mass(Pout, Required_Modules, CC_Length, CC_Width, CC_Height, enclosureType, enclosureMaterial);
    
    DDCU.efficiency = FS_efficiency^2*RS_efficiency*ITS_efficiency*CS_efficiency*CC_Efficiency;
    DDCU.Q = (1-DDCU.efficiency)*Pout;
    
    DDCU.radiator_Mass = Calculate_Radiator_Mass(radiatorType, Q, maxBaseplateTemp, maxRadiatorSinkTemp, maxRadiatorBaseplateDelta, radiatorMaterial, CC_Length, CC_Width, CC_Height);
    
    DDCU.Conductor_Connector_Mass_DDCU = Calculate_Conductor_Connector_Mass(F, Vin, Vout, Pout, Available_Modules, Required_Modules, CC_Efficiency, CC_Length, CC_Width, CC_Height, harnessMaterial, enclosureType, 2);
    % we temporarily removed Conductor_Connector mass calculations because
    % they didn't seem to give accurate numbers
    
    DDCU.CM_Mass = Calculate_Control_Monitoring_Mass(Available_Modules, Required_Modules, Pout, 0);

    
%     Q_DDCU = Pout * (1 - DDCSE); % i think
%     Pin = Pout/DDCE;
    
    DDCU.total_Mass = Filter_Stage_Mass_Input + Filter_Stage_Mass_Output+  Rectifier_Stage_Mass + Inverter_Transformer_Stage_Mass + ...
        Chopper_Stage_Mass + box_Mass + radiator_Mass + CM_Mass + Conductor_Connector_Mass_DDCU;